/*
 * Created by SharpDevelop.
 * User: Marcos
 * Date: 24/06/2018
 * Time: 02:32
 * 
 * To change this template use Tools | Options | Coding | Edit Standard Headers.
 */
using System;
using System.Windows.Forms;

//usado pelo reconhecimento
using System.Speech.Synthesis;
using Microsoft.Speech.Recognition;
using System.Globalization;

namespace serena_mae
{
	/// <summary>
	/// Description of MainForm.
	/// </summary>
	public partial class MainForm : Form
	{
		public MainForm MyProcess;
		//Variaveis globais
        // variaveis para voz
       	static CultureInfo ci = new CultureInfo("pt-BR");// linguagem utilizada
        static SpeechRecognitionEngine reconhecedor; // reconhecedor de voz
        SpeechSynthesizer resposta = new SpeechSynthesizer();// sintetizador de voz
        // Palavras aceitas
        public string[] listaPalavras = { 
        	"iniciar",
        };
        
		public MainForm()
		{
			InitializeComponent();
			Init();
		}
		public void Gramatica()
        {
            try
            {
                reconhecedor = new SpeechRecognitionEngine(ci);
            }
            catch (Exception ex)
            {
                MessageBox.Show("ERRO ao integrar lingua escolhida:" + ex.Message);
            }

            // criacao da gramatica simples que o programa vai entender
            // usando um objeto Choices
            var gramatica = new Choices();
            gramatica.Add(listaPalavras); // inclui a gramatica criada

            // cria o construtor gramatical
            // e passa o objeto criado com as palavras
            var gb = new GrammarBuilder();
            gb.Append(gramatica);

            // cria a instancia e carrega a engine de reconhecimento
            // passando a gramatica construida anteriomente
            try
            {
                var g = new Grammar(gb);

                try
                {
                    // carrega o arquivo de gramatica
                    reconhecedor.RequestRecognizerUpdate();
                    reconhecedor.LoadGrammarAsync(g);

                    // registra a voz como mecanismo de entrada para o evento de reconhecimento
                    reconhecedor.SpeechRecognized += Sre_Reconhecimento;

                    reconhecedor.SetInputToDefaultAudioDevice(); // microfone padrao
                    resposta.SetOutputToDefaultAudioDevice(); // auto falante padrao
                    reconhecedor.RecognizeAsync(RecognizeMode.Multiple); // multiplo reconhecimento
                }
                catch (Exception)
                {
                	resposta.SpeakAsync(" Desculpe mas não encontrei nenhum microfone conectado neste computador");
                	MessageBox.Show("Nenhum microfone encontrado!!");
                }
            }
            catch (Exception ex)
            {
            	resposta.SpeakAsync("Foi encontrado um erro com a gramatica");
                MessageBox.Show("ERRO ao criar a gramática: " + ex.Message);
            }
        }
		
		public void Init()
        {
            resposta.Volume = 100; // controla volume de saida
            resposta.Rate = 3; // velocidade de fala

            Gramatica(); // inicialização da gramatica
        }
		
		        // funcao para reconhecimento de voz
        void Sre_Reconhecimento(object sender, SpeechRecognizedEventArgs e)
        {
            string frase = e.Result.Text;
            
            switch (frase)
			{
            case "iniciar":
      		    resposta.SpeakAsync("reconhecimento de voz iniciado, tudo funcionando");
			break;
			    
           default:
            	resposta.SpeakAsync("nenhum comando definido para isso");
           break;
            }
            
        }

}
}

	
